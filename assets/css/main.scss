---
---

// Variables

$background: #f2f2f3; // background
$well: #ececec; // darker well
$button: #e8e8e8; // even (slighly) darker button
$card: #f7f7f7; // lighter card
$card-transp: rgba(247, 247, 247, 0.7); // transparent card
$borders: lightgrey; // site-nav, images, icons, etc.
$shadows: rgba(0, 0, 0, 0.1); // shadows
$site-links: #c95273; // site links
$sl-hover: #b20838; // site links hover
$page-links: #6583A4;
$page-links-transp: rgba(101, 131, 164, 0.7);
$pl-hover: #194577;
$pl-hover-transp: rgba(25, 29, 119, 0.7);

// Resets

h1, h2, h3, h4, p, ul {
  margin: 0;
}

h1, h2, h3, h4, p {
  margin-bottom: 1rem;

  &:last-child {
    margin-bottom: 0;
  }
}

// ALL last-children should be flush with bottom of parent but there are specificity issues with this declaration (rule targeting pseudo-element will be overridden by rules targetting classes or ids; could use !important but unclear if this would have its own issues)
// :last-child {
//   margin-bottom: 0;
// }

h4 {
  font-size: 1.17rem; // approx equal to h3 ... check this (otherwise h4 font size not usually explicitly defined, i.e., 1rem)
}

img {
  margin-bottom: 1rem;

  &:last-child {
    margin-bottom: 0;
  }
}

// Utility class for breaking margin-bottom rules
.no-margin-bottom {
  margin-bottom: 0;
}

hr {
  margin: 0 0 2rem 0;
  border: 0;

  // Subtle inset <hr /> inspired by Dan Eden's
  border: 0; /* Reset */
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  border-bottom: 1px solid rgba(255, 255, 255, 0.3);
}

nav {
  ul {
    padding-left: 0;
    li {
      list-style-type: none;
      a {
        display: block; // Fixes a very minor height error...
      }
    }
  }
}

// Main styles
* {
  box-sizing: border-box;
}

a {
  color: $page-links;
  text-decoration: none;
}

.icon {
  // display: inline-block;
  // width: 1rem;
  // height: 1rem;
  // stroke-width: 0;
  // stroke: currentColor;
  // fill: currentColor;
}

html {
  padding: 4rem 2rem 0;
  // height: 100%; // So body and main can expand to 100%
}

body {
  background-color: $background;
  max-width: 60rem;
  margin: 0 auto;
  font-family: 'Gentium Basic', serif;
  // font-family: "Open Sans", sans-serif;
  // font-size: 1rem;
  line-height: 1.3; // things get messed up if use rem

  display: flex; // Make header, main, footer flex items
  flex-flow: column;
  // height: 100%; // So body and main can expand to 100%
}

header {
  // flex: 0 0 auto; // As flex item (with main and footer), should not shrink
  margin-bottom: 2rem;
}

#logo {
  display: flex;
  flex-flow: column;
  align-items: center;
  margin-bottom: 2rem;

  img {
    box-sizing: content-box; // or else image gets squashed. dimensions explicitly set in html, and border-box smushes image to account for margin-right... maybe there's a better fix?
    display: block; // Or else extra space around element (default is inline)
    margin-bottom: 2rem;
  }

  span {
    font-size: 2.5rem;
    color: grey;
  }
}

#nav-site {
  background-color: $well;
  border: solid $borders 1px;
  border-radius: 4px;

  ul {
    display: flex;
    flex-flow: column;
    align-items: stretch;
  }

  a {
    color: $site-links;
    text-align: center;
    border-bottom: solid $borders 1px;
  }

  // #top-nav {
  //   margin-bottom: 0; // unset h2 default
  //   &:before {
  //     display: block;
  //     content: " "; // space or empty?
  //     margin-top: -3.75rem;
  //     height: 3.75rem;
  //     visibility: hidden; // just in case?
  //   }
  // }

  svg {
    display: block; // Or else extra space around element (default is inline)
    margin: 0 auto; // ...centering block-level element
    width: 1.75rem;
    height: 1.75rem;
    fill: rgb(160, 160, 160);
  }
}

#nav-site-toggle-button {
  // reset default styles
  border: none;
  background-color: $button;
}

#nav-site a, #nav-site-toggle-button {
  display: block;
  width: 100%;
  padding: 1.25rem;
  font-size: 1.2rem;
}


main {
  // As flex item (with header, footer), should grow
  // flex: 1 0 auto;
  // How to have minimum height = screen height with pages showing limited content? In practice not a problem here.
  display: flex;
  flex-flow: column;
}

#nav-page {
  position: relative;
  z-index: 1;
  background-color: $card;
  padding: 2rem;
  text-align: center;
  margin-bottom: 2rem;
  box-shadow: 0 1px 3px $shadows;

  & > ul {
    li {
      margin-bottom: 1rem;
      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  h1 {
    margin-bottom: 1.5rem;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

#jump-up-box {
  display: none;
  // MOBILE JUMP TO TOP
  // display: inline-block;
  // padding: 1.5rem;
  // border-radius: 9999px;
  // background-color: $card-transp;
  // box-shadow: 0 1px 3px $shadows; // shadows already transp
  //
  // position: fixed;
  // bottom: 1.5rem;
  // right: 2.25rem;
  // z-index: 2; // on top of everything including nav-page
  //
  // svg {
  //   display: block; // Fixes some subtle extra padding issues?
  //   width: 1.75rem;
  //   height: 1.75rem;
  //   fill: $page-links-transp;
  //   &:hover {
  //     fill: $pl-hover-transp;
  //   }
  // }
}

section {
  background-color: $card;
  padding: 2rem;
  box-shadow: 0 1px 3px $shadows;
  margin-bottom: 2.5rem; // needs to be larger than 2rem ie height of gap from top to nav-page, or else previous section shadow visible

  &:last-child {
    margin-bottom: 0;
  }
}

.section-title {
  text-align: center;

  &:before {
    display: block;
    content: " "; // space or empty?
    margin-top: -4rem;
    height: 4rem;
    visibility: hidden; // just in case?
  }
}

.section-description {
  font-size: 1.1rem;
}

.section-image {
  max-width: 100%; // Shrink images on horizontal resize (doesn't work to set as absolute size like max-width: 400px... why?)
  height: auto; // Scale height (seemingly needed for flex images)
  padding: 5px;
  border: solid $borders 1px;
}

footer {
  // As flex item (with main and footer), should not shrink
  // flex: 0 0 auto;
  padding: 4rem 0;
  text-align: center;
}

#copyright {
  color: $borders;
}

// Page-specific: Research

.research-item {
  margin-bottom: 2rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.citation {
  // Hanging indent
  padding-left: 0.75rem;
  text-indent: -0.75rem;

  cite {
    font-style: italic; // Should be italic by default, but just in case not
  }

  .no-italic {
    font-style: normal;
  }
}

// Page-specific: People

.people-item {
  display: flex;
  flex-flow: column;
  align-items: center;
  margin-bottom: 4rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.people-item-img {
  flex: 0 0 auto; // Possibly preventing bug: occasionally, flex item image shrinks on load
  border-radius: 100%;
  padding: 5px;
  border: solid $borders 1px;
}

.people-item-text-header {
  text-align: center;
  margin-bottom: 1.25rem;

  > :last-child { // same as `& > *:last-child` scss ampersand and wildcard both implied
    margin-bottom: 0;
  }
}

.people-item-text-name {
  margin-bottom: 0.1rem;
}

.people-item-text-position {
  font-size: 1.1rem;
}

.people-item-text-cv {
  margin-bottom: 1.25rem; // to match header bottom, centering contact-links
}

.people-item-contact-links {
  // Could consider using display: flex or float to control extra spaces
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem; // space before CV

  > * { // same as `& > *` scss ampersand is implied
    margin-right: 0.5rem;

    &.buttony-link {
      margin-right: 1rem;
    }

    &:last-child {
      margin-right: 0;
    }
  }

  a {
    // does making display: block help, as elsewhere?
    // display: block;
  }

  svg {
    display: block; // Or else extra space around element (default is inline)
    width: 1rem;
    height: 1rem;
    fill: rgb(127, 127, 127);
    &:hover {
      fill: black; // Individual colors for different social?
    }
  }
}

.buttony-link {
  display: inline-block; // fixes minor gaps also maybe makes sense in context of added padding
  padding: 0.25rem 0.5rem;
  border: solid $page-links 1px;
  border-radius: 9999px;
  color: $page-links;
  font-size: 0.75rem;

  &:hover {
    background-color: hsl(211, 26%, 96%); // i.e., page-links with more luminence
    color: $page-links; // override $pl-hover default
  }
}

#alumni-cols {
  columns: 1;
  column-gap: 2rem;
  font-size: 0.9rem;
}

.alumni-group {
  text-align: center;
  break-inside: avoid;
  margin-bottom: 2rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.alumni-group-name {
  margin-bottom: 0.5rem;
}

.alumni-person {
  margin-bottom: 0;
}

// Page-specific: News

#nav-news {
  margin-bottom: 1rem;
  ul {
    display: flex;
    li {
      margin: 0 0.5rem 0 0;
    }
  }
}

.news-item {
  display: flex;
  flex-flow: column;
  align-items: center;
  margin-bottom: 4rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.news-type-icon {
  // Height and width set the size of the SVG "frame" - the actual
  // image will be contained within this frame in such a way that
  // preserves aspect ratio.
  display: block; // Or else extra space around element (default is inline)
  width: 70px;
  height: 70px;
}

.news-type-icon-border {
  padding: 5px;
  border-radius: 100%;
  margin-bottom: 1rem;

  &.print-type {
    // border: solid rgba(50, 50, 50, .2) 1px;
    border: solid rgb(198, 239, 231) 1px;
    .news-type-icon-outer {
      // background-color: rgba(50, 50, 50, .2);
      background-color: rgb(198, 239, 231);
      .news-type-icon {
        // fill: rgba(50, 50, 50, 1);
        fill: rgba(0, 51, 102, 1);
      }
    }
  }

  &.video-type {
    // border: solid rgba(179, 8, 56, .15) 1px;
    border: solid rgb(239, 198, 213) 1px;
    .news-type-icon-outer {
      // background-color: rgba(179, 8, 56, .15);
      background-color: rgb(239, 198, 213);
      .news-type-icon {
        // fill: rgba(179, 8, 56, 1);
        fill: rgba(0, 51, 102, 1);
      }
    }
  }

  &.audio-type {
    // border: solid rgba(0, 51, 102, .25) 1px;
    border: solid rgb(239, 236, 198) 1px;
    .news-type-icon-outer {
      // background-color: rgba(0, 51, 102, .25);
      background-color: rgb(239, 236, 198);
      .news-type-icon {
        fill: rgba(0, 51, 102, 1);
      }
    }
  }
}

.news-type-icon-outer {
  padding: 59px;
  border-radius: 100%;
}

.news-item-data {
  max-width: 20rem;
  text-align: center;
}

.news-title {
  margin-bottom: 0.3rem;
}

.sub-source {
  color: grey;
}

// Page specific: Index

#twitter-div {
  height: 300px;
  overflow-y: scroll;
}

#about-anjan {
  display: flex;
  flex-flow: column;
  align-items: center;
  margin-bottom: 2rem;

  &:last-child {
    margin-bottom: 0;
  }
}

#about-anjan-img {
  flex: 0 0 auto; // Possibly preventing bug: occasionally, flex item image shrinks on load
  padding: 5px;
  border: solid $borders 1px;
}

#about-anjan-text-header {
  text-align: center;
  margin-bottom: 1rem;
}

.book-item {
  display: flex;
  flex-flow: column;
  align-items: center;
  margin-bottom: 4rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.book-item-image {
  flex: 0 0 auto; // Possibly preventing bug: occasionally, flex item image shrinks on load
  border: solid $borders 1px;
  padding: 5px;
  margin-bottom: 1rem; // Usually not necessary to explicitly declare margin-bottom on img (I have this in reset), but need to override :last-child causing margin-bottom: 0 (technically :last-child because inside <a>)
}

.book-item-header {
  text-align: center;
  margin-bottom: 1rem;
}

.book-item-pub {
  margin-bottom: 0.5rem;
}

// Page specific: Contact

.contact-item {
  display: flex;
  flex-flow: column;
  align-items: center;
  margin-bottom: 4rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.contact-icon-border {
  padding: 5px;
  border-radius: 100%;
  margin-bottom: 1rem;
  border: solid rgba(50, 50, 50, .09) 1px;
}

.contact-icon-outer {
  padding: 59px;
  border-radius: 100%;
  background-color: rgba(50, 50, 50, .09);
}

.contact-icon {
  display: block; // Or else extra space around element (default is inline)
  width: 70px;
  height: 70px;
  fill: silver;
}

.contact-main {
  width: 100%;

  h3 {
    text-align: center;
  }
}

address {
  background-color: white;
  font-size: 0.8rem;
  font-style: normal;
  padding: 0.8rem 1.25rem;
  margin-bottom: 1rem;
  border-left: solid $page-links 4px;
  box-shadow: 0 1px 3px $shadows; // shadows already transp

  &:last-child {
    margin-bottom: 0;
  }

  p {
    margin-bottom: 0;
    padding-left: 0.5rem;
    text-indent: -0.5rem;
  }
}

#map {
  padding: 5px;
  border: solid $borders 1px;
}

@media screen and (min-width: 45rem) {
  a:hover {
    color: $pl-hover;
  }

  html {
    padding: 6rem 4rem 0;
  }

  #logo {
    flex-flow: row;
    margin-bottom: 2rem;

    img {
      margin-bottom: 0;
      padding-right: 2.5rem;
      border-right: solid 2px $borders;
    }

    span {
      padding-left: 2.5rem;
    }
  }

  #nav-site {
    padding: 1.5rem 2rem;

    ul {
      flex-flow: row wrap;
    }

    li {
      margin-right: 1.5rem;
    }

    a {
      text-align: left;
      border-bottom: none;
      padding: 0;

      &:hover {
        color: $sl-hover;
      }
    }
  }

  main {
    flex-flow: row;
    align-items: flex-start;
    justify-content: flex-end;
  }

  #nav-page-outer {
    flex: 0 0 16rem;
    margin-right: 2rem;
  }

  #nav-page {
    text-align: left;
    margin-bottom: 0;
  }

  #jump-up-box {
    transition: top 0.2s ease;

    display: inline-block;
    padding: 1.5rem;
    border-radius: 9999px;
    background-color: $card;
    box-shadow: 0 1px 3px $shadows; // shadows already transp

    position: relative;
    top: -5rem;
    left: 1.5rem;
    bottom: auto; // reset
    right: auto; // reset
    z-index: 0;

    svg {
      transition: margin-top 0.2s ease;

      display: block; // Fixes some subtle extra padding issues?
      width: 1.75rem;
      height: 1.75rem;
      margin-top: 0;
      fill: $page-links;
      &:hover {
        fill: $pl-hover;
      }
    }
  }

  #page-content {
    // flex: 1 1 auto; // allows flex item to grow to fill remaining width of body / main [initial default is 0 1 auto, corresponding to grow, shrink, basis]
    flex: 0 1 calc(100% - 18rem); // Calc is not well supported... perhaps implement in js?
    // overflow: hidden; // by default, flex items have min-width (and min-height) as auto, meaning will not shrink smaller than size of contents. override with mid-width: 0 or even more elegantly, overflow: hidden (any value of overflow except visible makes min-width: 0 and content will disappear at small sizes as needed)
    min-width: 0; // overflow: hidden screws up shadows
  }

  .section-title {
    text-align: left;
  }

  footer {
    padding: 6rem 0;
  }

  // Page-specific: People

  #alumni-cols {
    columns: 2;
  }

  .alumni-group {
    text-align: left;
  }
}

@media screen and (min-width: 60rem) {

  // These "desktop" styles look too squished at the 40rem breakpoint

  .hr-small-media {
    display: none;
  }

  // Page-specific: People

  .people-item {
    flex-flow: row;
    align-items: flex-start;
  }

  .people-item-img {
    margin-right: 2rem;
    margin-bottom: 0;
  }

  .people-item-text-header {
    text-align: left;
  }

  .people-item-contact-links {
    justify-content: flex-start;
  }

  #alumni-cols {
    columns: 3;
  }

  // Page-specific: News

  .news-item {
    flex-flow: row;
    margin-bottom: 2rem;

    &:last-child {
      margin-bottom: 0;
    }
  }

  .news-type-icon-border {
    margin-bottom: 0;
    margin-right: 2rem;
  }

  .news-item-data {
    max-width: 100%;
    text-align: left;
  }

  // Page specific: Index

  #about-anjan {
    flex-flow: row;
    align-items: flex-start;
  }

  #about-anjan-img {
    margin-right: 2rem;
    margin-bottom: 0;
  }

  #about-anjan-text-header {
    text-align: left;
  }

  .book-item {
    display: flex;
    flex-flow: row;
    align-items: flex-start;
  }

  .book-item-image {
    margin-right: 2rem;
    margin-bottom: 0;
  }

  .book-item-header {
    text-align: left;
  }

  // Page specific: Contact

  .contact-item {
    flex-flow: row;
    align-items: flex-start; // default: top-align
    margin-bottom: 2rem;

    &.item-align-center {
      align-items: center; // optional: (re-)center-align with this class
    }
  }

  .contact-icon-border {
    margin-right: 2rem;
    margin-bottom: 0;
  }

  .contact-main {
    h3 {
      text-align: left;
    }
  }
}

// Styles for JS

.scrolled {
  position: static; // Default value
}

#nav-site-links {
  &.menu-closed {
    display: none;
  }
}

@media screen and (min-width: 45rem) {
  #nav-site-toggle-button {
    display: none;
  }

  .scrolled {
    position: fixed;
    width: 16rem;
    top: 2rem;
    left: 4rem; // Calc is not well supported... perhaps implement in js?

    #jump-up-box {
      top: -3.5rem;

      svg {
        margin-top: 3rem;
      }
    }
  }

  #nav-site-links {
    &.menu-closed {
      display: flex; // Default value
    }
  }
}

@media screen and (min-width: 68rem) {
  .scrolled {
    left: calc((100% - 60rem) / 2); // Calc is not well supported... perhaps implement in js?
  }
}
